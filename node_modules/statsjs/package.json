{
  "name": "statsjs",
  "description": "Provides functions for many of the statistical operations that you might need",
  "version": "1.0.6",
  "author": {
    "name": "Angus Gibbs",
    "url": "http://angusgibbs.com"
  },
  "homepage": "http://github.com/angusgibbs/statsjs",
  "keywords": [
    "math",
    "stats",
    "statistics",
    "average",
    "mean",
    "min",
    "max",
    "standard",
    "deviation",
    "regression",
    "quartile",
    "median",
    "outliers",
    "factorial",
    "probability",
    "permutation",
    "combination",
    "binomial",
    "geometric",
    "normal",
    "z-test"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/angusgibbs/statsjs.git"
  },
  "bugs": {
    "url": "http://github.com/angusgibbs/statsjs/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/angusgibbs/statsjs/blob/master/LICENSE"
    }
  ],
  "main": "lib/stats",
  "devDependencies": {
    "mocha": "1.4.x",
    "expect.js": "git://github.com/angusgibbs/expect.js.git"
  },
  "readme": "# Stats.js by [Angus Gibbs](http://angusgibbs.com)\r\n\r\nProvides functions for many of the statistical operations that you might need.\r\n\r\n## About\r\n\r\nStats.js currently supports many of the statistical functions that you might need, including\r\n\r\n* regression lines (linear, power, exponential)\r\n* min, max, mean, median, first quartile, third quartile\r\n* least common multiple and greatest common factor\r\n* standard deviation\r\n* sorting a list of points by an attribute\r\n* probabilities (binomial, geometric, normal)\r\n* z procedures\r\n\r\nIt also supports many of the functions on the data set that you'd expect from [Underscore](http://underscore.js), such as `pluck`, `map`, and `each`.\r\n\r\nSee the [getting started guide](https://github.com/angusgibbs/statsjs/blob/master/docs/getting_started.md) for more information.\r\n\r\n## Roadmap\r\n\r\n* Better documentation\r\n* Auto-detect best regression line\r\n\r\n## Contributing\r\n\r\nPatches are welcome, just make sure there are matching unit tests. Tests use [mocha](http://visionmedia.github.com/mocha/) with my fork of [expect.js](https://github.com/angusgibbs/expect.js) (which allows you to assert that a value is within a certain error range of another value). Once you clone the repo (either your fork or this repository), `cd` into it and run `npm install` to install mocha and expect.js. Tests can be found within `test/test.js`.\r\n\r\n## License\r\n\r\nStats.js is licensed under the [MIT License](http://opensource.org/licenses/mit-license.php). See https://github.com/angusgibbs/statsjs/blob/master/LICENSE for the full license.",
  "readmeFilename": "README.md",
  "_id": "statsjs@1.0.6",
  "_from": "statsjs"
}
